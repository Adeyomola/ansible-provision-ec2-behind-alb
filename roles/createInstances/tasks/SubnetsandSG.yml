---
- name: Create Private Subnet
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: 10.0.1.0/24
    region: us-east-1
    az: us-east-1a
    access_key: "{{ aws_access_key }}"
    secret_key: "{{ aws_secret_key }}"
    tags:
      Name: BiServer Private
  register: privatesubnet

- name: Create Public Subnet in AZ a
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: 10.0.2.0/24
    region: us-east-1
    az: us-east-1a
    access_key: "{{ aws_access_key }}"
    secret_key: "{{ aws_secret_key }}"
    tags:
      Name: BiServer Public
  register: publicsubnet

- name: Create Public Subnet in AZ b
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: 10.0.3.0/24
    region: us-east-1
    az: us-east-1b
    access_key: "{{ aws_access_key }}"
    secret_key: "{{ aws_secret_key }}"
    tags:
      Name: BiServer Public 1
  register: publicsubnet1

- name: Create Security Group for Load Balancer
  amazon.aws.ec2_security_group:
    name: biserver-sg-public
    description: "Allows incoming traffic from the internet"
    vpc_id: "{{ vpc.vpc.id }}"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
    region: us-east-1
    access_key: "{{ aws_access_key }}"
    secret_key: "{{ aws_secret_key }}"
  register: sg2

- name: Create Security Group for Instances
  amazon.aws.ec2_security_group:
    name: biserver-sg
    description: "Allows all incoming traffic from LB SG"
    vpc_id: "{{ vpc.vpc.id }}"
    rules:
      - proto: all
        group_id: "{{ sg2.group_id }}"
    region: us-east-1
    access_key: "{{ aws_access_key }}"
    secret_key: "{{ aws_secret_key }}"
  register: sg

- name: Update Outbound Rule for Load Balancer Security Group
  amazon.aws.ec2_security_group:
    name: biserver-sg-public
    description: "Allows incoming traffic from the internet"
    vpc_id: "{{ vpc.vpc.id }}"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        group_id: "{{ sg.group_id }}"
    region: us-east-1
    access_key: "{{ aws_access_key }}"
    secret_key: "{{ aws_secret_key }}"
  register: sg2
